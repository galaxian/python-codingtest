# 여행가 A는 N × N 크기의 정사각형 공간 위에 서 있다.
# 이 공간은 1 × 1 크기의 정사각형으로 나누어져 있다.
# 가장 왼쪽 위 좌표는 (1, 1)이며, 가장 오른쪽 아래 좌표는 (N, N)에 해당한다.
# 여행가 A는 상, 하, 좌, 우 방향으로 이동할 수 있으며, 시작 좌표는 항상 (1, 1)이다. 우리 앞에는 여행가 A가
# 이동할 계획이 적힌 계획서가 놓여 있다
#
# 계획서에는 하나의 줄에 띄어쓰기를 기준으로 L, R, U, D 중 하나의 문자가 반복적으로 적혀있다.
# 각 문자의 의미는 다음과 같다
#
# L: 왼쪽으로 한 칸 이동
# R: 오른쪽으로 한 칸 이동
# U: 위로 한 칸 이동
# D: 아래로 한 칸 이동
#
# 이때 여행가 A가 N × N 크기의 정사각형 공간을 벗어나는 움직임은 무시된다
# 예를 들어 (1, 1)의 위치에서 L 혹은 U를 만나면 무시된다

# 구현 문제로 문제의 요구사항대로 코드를 작성하면 되는 문제라고 생각한다.
# move_type에 따라 x, y의 이동 방향을 좌표로 나타내기 위해 dx, dy 리스트를 사용해 문제를 해결했다.


n = int(input())
x, y = 1, 1
nx, ny = x, y
plans = input().split()

# 이동 방향에 따른 x, y 변경
dx = [0, 0, -1, 1]
dy = [-1, 1, 0, 0]
move_types = ['L', 'R', 'U', 'D']

for plan in plans:
    for i in range(len(move_types)):
        # move_type에 따라 좌표 이동
        if plan == move_types[i]:
            nx = x + dx[i]
            ny = y + dy[i]

        # 벽을 넘어 이동하는 경우 continue
        if nx < 1 or ny < 1 or nx > n or ny > n:
            continue
        x, y = nx, ny

print(x, y)
